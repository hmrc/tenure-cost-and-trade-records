# Copyright 2022 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "backend.conf"

appName = tenure-cost-and-trade-records

play.http.router = prod.Routes

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.audit.AuditModule"

play.modules.enabled += "uk.gov.hmrc.mongo.play.PlayMongoModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform backend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.backend.BackendModule"
play.modules.enabled += "uk.gov.hmrc.tctr.backend.ForTCTRModule"

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.backend.http.JsonErrorHandler"

#play.modules.enabled += "uk.gov.hmrc.mongo.play.PlayMongoModule"

#mongodb {
#  uri = "mongodb://localhost:27017/tctr"
#}

application.session.httpOnly = false
application.session.secure = false

play.i18n.langs = ["en","cy"]

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
  name = ${appName}
  rateUnit = SECONDS
  durationUnit = SECONDS
  showSamples = true
  jvm = true
  enabled = true
}

controllers {
  com.kenshoo.play.metrics.MetricsController = {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }

  uk.gov.hmrc.play.health.AdminController = {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }
}


# Microservice specific config

proxy {
  proxyRequiredForThisEnvironment = false
}

auditing {
  enabled = false
  traceRequests = false
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}

mongodb {
  uri = "mongodb://localhost:27017/tenure-cost-and-trade-records"
}

microservice {
  metrics {
    graphite {
      host = graphite
      port = 2003
      prefix = play.${appName}.
      enabled = false
    }
  }

  services {
    tenure-cost-and-trade-records-stubs {
      host = localhost
      port = 9528
    }

  }
}

authenticationRequired = true

crypto.key = "YT138w7G1x6dYRz+u3n5CutLY3zJjDtiKqsj4MmHUxY="     # Key is overridden for each environment

authentication {
  maxFailedLogins = 5
  lockoutDurationHours = 2
  loginSessionDurationHours = 1
  ipLockoutEnabled = false
  voaIPAddress = "replaceme"
}

submissionExport {
  enabled = false
  publishingEnabled = false
  frequencySeconds = 30
  url = "https://undefined.localhost"
  username = "testusername"
  password = "testpassword"
  logFull = true
  batchSize = 50
  testAccountPrefix = "9999000"
  enableDuplicateSubmissions = false
  retryWindowHours = 1
  logErrorInHours = 3
}

validationImport {
  enabled = true
  url = "http://localhost:9528/tenure-cost-and-trade-records-stubs/credentialsUpload"
  username = "testusername"
  password = "testpassword"
  importLimit = 600000
  batchSize = 20
  importTestData = true
  hourToRunAt = 11
  minuteToRunAt = 45
  retryWindowHours = 1
  stopExcessiveDeletion = true
  excessiveDeletionThreshold = 0.2
  expireAfterDays = 365
}